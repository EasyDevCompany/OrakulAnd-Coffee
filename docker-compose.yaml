version: '3.3'

services:
  bot:
    image: "${BOT_IMAGE_NAME:-tg_bot-image}"
    container_name: "${BOT_CONTAINER_NAME:-tg_bot-container}"
    stop_signal: SIGINT
    build:
      context: .
    working_dir: "/usr/src/app/${BOT_NAME:-tg_bot}"
    ports:
      - 22249:22249
    volumes:
      - .:/usr/src/app/${BOT_NAME:-tg_bot}
    command: python3 -m main
    restart: always
    env_file:
      - ".env"
    networks:
      - tg_bot

  app_redis:
    container_name: ${PROJECT_SLUG}_redis
    networks:
      - tg_bot
    image: redis:5.0.0
    command: "redis-server"


  celery:
    build:
      context: .
      dockerfile: celery.dockerfile
    container_name:  ${PROJECT_SLUG}_app_celery
    command: bash -c "celery -A tasks worker -l INFO"
    depends_on:
      - app_redis
    networks:
      - tg_bot

  worker:
    build:
      context: .
      dockerfile: celery.dockerfile
    container_name: ${PROJECT_SLUG}_app_worker
    command: bash -c "celery -A tasks beat -l INFO"
    depends_on:
      - app_redis
      - celery
    networks:
      - tg_bot

  db:
    container_name: orakul_db
    image: postgres:14
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    restart: always
    ports:
      - 5432:5432
    networks:
      - tg_bot
    volumes:
      - ./postgres:/var/lib/postgresql
    env_file:
      - ".env"


networks:
  tg_bot:
    driver: bridge